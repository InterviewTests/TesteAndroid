apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "br.com.iomarsantos.testeandroid"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"https://floating-mountain-50292.herokuapp.com/\"")
        }
        release {
            minifyEnabled false
            buildConfigField("String", "BASE_URL", "\"https://floating-mountain-50292.herokuapp.com/\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // android support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"

    // constraint-layout
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"

    // font
    implementation "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    // network
    implementation "com.amitshekhar.android:rx2-android-networking:$rootProject.ext.rx2FastAndroidNetworking"

    // parser
    implementation "com.amitshekhar.android:jackson-android-networking:$rootProject.ext.jacksonAndroidNetworking"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.ext.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.dagger2Version"
    compileOnly "javax.annotation:jsr250-api:$rootProject.ext.jsr250ApiVersion"
    implementation "javax.inject:javax.inject:$rootProject.ext.javaxInjectVersion"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxandroidVersion"

    // generator for view
    implementation "com.jakewharton:butterknife:$rootProject.ext.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterKnifeVersion"

    // dependencies for unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.dagger2Version"

    // UI Testing
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.dagger2Version"


}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
}


// Log test results to console
tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}